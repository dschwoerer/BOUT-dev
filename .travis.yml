sudo: required
dist: trusty
language: cpp
compiler: gcc

addons:
  apt:
    packages:
    - openmpi-bin
    - libopenmpi-dev
    - libfftw3-dev
    - libnetcdf-dev
    - libhdf5-serial-dev
    - netcdf-bin
    - hdf5-tools

matrix:
  include:
  - env: CONFIGURE_OPTIONS=''
  - env: CONFIGURE_OPTIONS='--enable-openmp' OMP_NUM_THREADS=2
  - env: CONFIGURE_OPTIONS='--enable-debug'
  - env: CONFIGURE_OPTIONS='--enable-checks=no --enable-optimize=3 --disable-signal --disable-track --disable-backtrace'
  - env: CONFIGURE_OPTIONS='' MPICH_CC=clang MPICH_CXX=clang++ OMPI_CC=clang OMPI_CXX=clang++
    compiler: clang
  - env: CONFIGURE_OPTIONS='--enable-debug' MPICH_CC=clang MPICH_CXX=clang++ OMPI_CC=clang OMPI_CXX=clang++
    compiler: clang
  - addons:
      apt:
        packages:
          - openmpi-bin
          - libopenmpi-dev
          - libfftw3-dev
          - libnetcdf-dev
          - libhdf5-serial-dev
          - netcdf-bin
          - hdf5-tools
          - libpetsc3.4.2-dev
    env: CONFIGURE_OPTIONS='--with-petsc' PETSC_DIR=/usr/lib/petscdir/3.4.2 PETSC_ARCH=linux-gnu-c-opt
  - addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-6
          - openmpi-bin
          - libopenmpi-dev
          - libfftw3-dev
          - libnetcdf-dev
          - libhdf5-serial-dev
          - netcdf-bin
          - hdf5-tools
    env: CONFIGURE_OPTIONS='' CC=gcc-6 CXX=g++-6 MPICH_CC=gcc-6 MPICH_CXX=g++-6 OMPI_CC=gcc-6 OMPI_CXX=g++-6 MATRIX_EVAL="CC=gcc-6 && CXX=g++-6" CXXFLAGS=-Wno-literal-suffix
    #The -Wno-literal-suffix flag in CXXFLAGS above is a temporary workaround to
    #disable a noisy message arising from the relatively old version of openmpi
    #in use in combination with the relatively new version of gcc. We should be able
    #to remove this if a newer openmpi version is introduced.

before_install:
  ##################################################
  # Job specific setup
  ##################################################
  # The following eval is the way to force CC/CXX to desired values as travis forces values
  # for these in the pre-before_install stage, see https://docs.travis-ci.com/user/languages/cpp/#C11-C%2B%2B11-(and-Beyond)-and-Toolchain-Versioning
  - eval "${MATRIX_EVAL}"
  - echo "${CC} $(${CC} --version)"
  ##################################################
  # Install Conda for python 3
  ##################################################
  - source .install_miniconda_for_travis.sh

  ##################################################

  # Make sure to use the system NetCDF/HDF5 libraries, or we end up
  # using the Conda libraries, which causes no end of headaches
  - export CONFIGURE_OPTIONS="--with-netcdf=/usr/bin/nc-config --with-hdf5=/usr/bin/h5cc $CONFIGURE_OPTIONS"

script:
  # Configure, compile and run test_suite
  - "./.travis_script.sh"

notifications:
  # Send a notification to the BOUT++ Slack team
  slack:
    secure: keU2ApI8C1M5q1700iNWmhzAQN5iJCciuP6V1lAjVBE8C2C/8mnYK3Pe83wok97buvvfVs5Qjq1+MSYSTCEw+dEye7p+1aBH7qg8C2Jyw+ugFe+6vmijag3v8DqkkzUGyF4X7+ei7YfV4G7u7YAlq/BqzD9e0SA7aASZJ3CF42f4lHKwTe0mnJfqOb8MwCBbSytzdj/iQH/O/pch03CjVObv2A88gaC5YMwYpeTAMMNGZThHsJHcVFCAz4MbvOApKSnykbRbE4AooF6lhUnAg/V40+ews5Q0NhYSLoOcQohLljLTMKAL2oRS34WdunnAEdIighLztFBNI/CKO8uaFBsWZcT2E4qRrajYTnuhCop5fUtk2lsrwUV36WFKLswa74KaSjXgpjvrV1MIidkRztPhYwcJdk9yvEroZ67C4GPBLZ6jZF/nUU9l2toPNkzGkxhDB9r9MIU2l0PJ2d3wRCcZ59jZ/Gr1Bminsyr20AU1JO5tsiO+6UI+7hxXQXtz/1knlmiZ/pXj/3Sp8+KQ/Z0MUeayC0CROFoZt/HekA6z34YcmeN/nMcXCnO7HTZ+bw7LasaIsrHbQ3PYPn8Be2f1hj4sPBnPpruN5FFYYc29c/ek8FET9LLD8a3v1V8P2udy/y5RnDqFskx+OfqKL8tSJk/zSbK/JPCTnx1rfsU=
