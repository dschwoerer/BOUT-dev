name: Extended Tests
on: [workflow_dispatch, push]

defaults:
  run:
    shell: bash

jobs:
  standard_tests:
    timeout-minutes: 120
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      BOUT_TEST_TIMEOUT: "6m"
      PETSC_DIR: /usr/lib/petscdir/3.7.7/x86_64-linux-gnu-real
      PETSC_ARCH: ""
      SLEPC_DIR: /usr/lib/slepcdir/3.7.4/x86_64-linux-gnu-real
      SLEPC_ARCH: ""
      OMP_NUM_THREADS: ${{ matrix.config.omp_num_threads }}
      PYTHONPATH: ${{ github.workspace }}/tools/pylib
      OMPI_MCA_rmaps_base_oversubscribe: yes
      MPIRUN: mpiexec -np
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "CMake, shared, release, Ubuntu 20.04"
            os: ubuntu-20.04
            cmake_options: "-DBUILD_SHARED_LIBS=ON
                            -DBOUT_ENABLE_OPENMP=ON
                            -DCMAKE_BUILD_TYPE=Release
                            -DBOUT_USE_PETSC=ON
                            -DBOUT_USE_SLEPC=ON
                            -DBOUT_USE_SUNDIALS=ON
                            -DBOUT_BUILD_DOCS=ON
                            -DBOUT_BUILD_EXAMPLES=ON
                            -DBOUT_RUN_ALL_TESTS=ON
                            -DSUNDIALS_ROOT=/home/runner/local"
            omp_num_threads: 2

          - name: "CMake, shared, OpenMP, Ubuntu 20.04, 3D metrics"
            os: ubuntu-20.04
            cmake_options: "-DBUILD_SHARED_LIBS=ON
                            -DBOUT_ENABLE_METRIC_3D=ON
                            -DBOUT_ENABLE_OPENMP=ON
                            -DBOUT_USE_PETSC=ON
                            -DBOUT_USE_SLEPC=ON
                            -DBOUT_USE_SUNDIALS=ON
                            -DBOUT_ENABLE_PYTHON=ON
                            -DBOUT_BUILD_EXAMPLES=ON
                            -DBOUT_BUILD_DOCS=ON
                            -DBOUT_BUILD_EXAMPLES=ON
                            -DBOUT_RUN_ALL_TESTS=ON
                            -DSUNDIALS_ROOT=/home/runner/local"
            omp_num_threads: 2

          - name: "CMake, minimal"
            os: ubuntu-20.04
            cmake_options: "-DBUILD_SHARED_LIBS=ON
                            -DBOUT_ENABLE_OPENMP=OFF
                            -DBOUT_USE_PETSC=OFF
                            -DBOUT_USE_SLEPC=OFF
                            -DBOUT_USE_SUNDIALS=OFF
                            -DBOUT_ENABLE_PYTHON=ON
                            -DBOUT_BUILD_EXAMPLES=ON
                            -DBOUT_BUILD_DOCS=ON
                            -DBOUT_ENABLE_SIGFPE=OFF
                            -DBOUT_ENABLE_MPI=ON
                            -DBOUT_ENABLE_MSGSTACK=OFF
                            -DBOUT_ENABLE_SIGNAL=OFF
                            -DBOUT_ENABLE_TRACK=OFF
                            -DBOUT_ENABLE_WARNINGS=OFF
                            -DBOUT_RUN_ALL_TESTS=ON"
            omp_num_threads: 2


    steps:
      - name: Job information
        run: |
          echo Build: ${{ matrix.config.name }}, ${{ matrix.config.os }}
          echo Configure options: ${{ matrix.config.configure_options }}
          echo CMake options: ${{ matrix.config.cmake_options }}

      - name: Install dependencies
        run: sudo apt update &&
             sudo apt install -y
                 libfftw3-dev
                 libnetcdf-dev
                 libnetcdf-c++4-dev
                 netcdf-bin
                 python3
                 python3-pip
                 python3-pytest
                 python3-numpy
                 python3-scipy
                 lcov
                 openmpi-bin
                 libopenmpi-dev
                 petsc-dev
                 slepc-dev
                 liblapack-dev
                 libparpack2-dev
                 doxygen

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install pip packages
        run: |
          ./.pip_install_for_travis.sh 'cython~=0.29' 'netcdf4~=1.5' 'sympy~=1.5' 'gcovr' 'cmake' 'h5py' zoidberg sphinx
          # Add the pip install location to the runner's PATH
          echo ~/.local/bin >> $GITHUB_PATH

      - name: Cache SUNDIALS build
        uses: actions/cache@v2
        with:
          path: /home/runner/local
          key: bout-sundials-${{ matrix.config.os }}

      - name: Build SUNDIALS
        run: ./.build_sundials_for_travis.sh

      - name: Build (CMake)
        if: ${{ contains(matrix.config.name, 'CMake') }}
        run: ./.ci_with_cmake.sh ${{ matrix.config.cmake_options }}

      - name: Upload coverage
        if: ${{ matrix.config.name == 'Coverage' }}
        uses: codecov/codecov-action@v1

