#
# Input file for "bout_runners_example/MMS"
#

# Root option
###############################################################################
nout = 10              # Number of output timesteps
timestep = 0.01        # Time between outputs

dump_format="nc"   # Write NetCDF format files

# Setting the z coordinate
ZMIN = 0.0
ZMAX = 1.0 # dz = 2*pi(ZMAX - ZMIN)/(MZ - 1)

# Number of guard cells
MXG = 1
MYG = 1
###############################################################################


# Mesh option
###############################################################################
[mesh]
# Puts the boundaries half a step outside the last grid points
symmetricGlobalY=true
symmetricGlobalX=true

# The spatial dimension
nx = 18
ny = 16
nz = 16

# Position of the separatrix (-1 is non periodic, >ny is periodic)
# --------Non-periodic----------
ixseps1 = -1
ixseps2 = -1
# ------------------------------
###############################################################################


# Methods option
###############################################################################
# Methods used for the radial (x) derivative terms
[mesh:ddx]
second = C2 # d^2/dx^2 (f)

# Methods used for parallel (y) derivative terms
[mesh:ddy]
second = C2  # d^2/dy^2 (f)

#Methods used for the azimuthal (z) derivative terms
[mesh:ddz]
second = FFT # d^2/dz^2 (f)
###############################################################################


# Solver settings
###############################################################################
[solver]
type = pvode             # Which solver to use (cvode should be same as pvode)
mms = false              # false by default

atol = 1.0e-7 # absolute tolerance
rtol = 1.0e-7 # relative tolerance

# Max allowed iterations in one step
mxstep = 100000000
###############################################################################


# Specifying the output
###############################################################################
[output]
floats = false # floats = false => output in double
###############################################################################


# Additional options
###############################################################################
# Geometry
# -----------------------------------------------------------------------------
[geom]
Lx = 1.2                 # The length of x from boundary to boundary
Ly = 2.0                 # The length of y from boundary to boundary
# Setting the spatial variables
yl = y * geom:Ly / (2.0*pi) #y in range [0,Ly]
xl = x * geom:Lx            #x in range [0,Lx]
# -----------------------------------------------------------------------------

# Constants
# -----------------------------------------------------------------------------
[cst]
D_par  = 1.0           # Parallel diffusion constant
D_perp = 2.0           # Perpendicular diffusion constant
# -----------------------------------------------------------------------------

# Flags
# -----------------------------------------------------------------------------
[flags]
use_grid = false     # Whether or not to read from a grid file
# -----------------------------------------------------------------------------

# The particle density
# -----------------------------------------------------------------------------
[n]
# Scaling
scale = 1.0

# Source and solution for MMS
solution  = t^(2.5) + sin(3+geom:xl^2) + exp(0.5*geom:yl) + 4*cos(z)
source    = 2.5*t^(1.5) - cst:D_perp*(2*(cos(geom:xl^2+3)-2*geom:xl^2*sin(geom:xl^2+3)) - 4*cos(z)) - cst:D_par*(0.25*exp(0.5*geom:yl))


# Boundary conditions
# Set the boundary to the initial condition
bndry_all   = dirichlet_o4(n:solution)
# -----------------------------------------------------------------------------
##############################################################################
