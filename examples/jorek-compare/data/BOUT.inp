# Settings for JOREK comparison model

##################################################
# settings used by the core code

NOUT = 100     # number of time-steps
TIMESTEP = 1e-3  # time between outputs

TwistShift = true  # use twist-shift condition?

MZ = 64     # number of points in z direction (2^n)

ZPERIOD = 10 # Fraction of a torus

MXG = 2
MYG = 2

grid="d3d_119919.nc"

#twistshift_pf = true # Grid has twist-shift in PF region

dump_format = "nc"   # Set extension for dump files (nc = NetCDF)

#StaggerGrids = true

[mesh]
paralleltransform = shifted # Use shifted metric method

##################################################
# derivative methods

[mesh:ddx]

first = C4
second = C4
upwind = W3
flux = U1

[mesh:ddy]

first = C4
second = C4
upwind = W3
flux = U1

[mesh:ddz]

first = C4
second = C4
upwind = W3
flux = U1

##################################################
# Laplacian inversion settings

[laplace]
all_terms = false
laplace_nonuniform = false
filter = 0.2   # Remove the top 20% of modes (BOUT-06 zwindow=0.4)

##################################################
# Solver settings

[solver]
type=petsc

# mudq, mldq, mukeep, mlkeep preconditioner options
ATOL = 1.0e-10 # absolute tolerance
RTOL = 1.0e-5  # relative tolerance
mxstep = 50000

#type=karniadakis
#timestep=5e-5

##################################################
# settings for JOREK comparison model

[jorek]

D_perp = 10   # Density perpendicular diffusion [m^2/s]

chi_eperp = 1e-7
chi_iperp = 2.5e-6

chi_epar = 30  # Electron parallel diffusion 
chi_ipar = 5   # Ion parallel diffusion

eta = 1.0   # Resistivity relative to Spitzer. 
            # Comment-out to use value from grid file

hyperresist = 1e-2

Wei = 0.0   # Electron-ion energy exchange relative to collisional

ohmic_heating = false # Include Ohmic heating in Te equation

viscos_perp = 1e-5  # Perpendicular viscosity
viscos_coll = 0.0   # Collisional viscosity
viscos_par = 1e-5   # Parallel viscosity

jpar_bndry_width=4  # Decaying jpar in boundary region

full_bfield = false
flux_method = false  # Use flux methods for fluid quantities

nonlinear = true

electron_density = true # Evolve electron density. Adds a jpar term to density

vorticity_momentum = true

include_profiles = false

parallel_lc = true  # Use LtoC and CtoL differencing

bracket_method = 2  # 0 = std, 1=simplified, 2 = arakawa, 3 = ctu

# field inversion flags: Add the following
#  1 - Zero-gradient DC component on inner boundary
#  2 - Zero-gradient AC component on inner boundary
#  4 -      "        DC     "      " outer    "
#  8 -      "        AC     "      " outer    "
# 16 - Zero all DC components of the result
# 32 - Don't use previous solution to start iterations
#      (iterative methods only)
# 64 - Set the width of the boundary layer to 1
# 128 - use 4th order differencing
# 256 - Laplacian = 0 inner boundary (combine 2nd & 4th-order)
# 512 - Laplacian = 0 outer boundary ( sometimes works )

phi_flags = 769  # inversion flags for phi

##################################################
# settings for individual variables
# The section "All" defines default settings for all variables
# These can be overridden for individual variables in
# a section of that name.

[All]
scale = 0.0 # default size of initial perturbations

# boundary conditions
# -------------------
# dirichlet    - Zero value
# neumann      - Zero gradient
# zerolaplace  - Laplacian = 0, decaying solution
# constlaplace - Laplacian = const, decaying solution
#
# relax( )   - Make boundary condition relaxing

bndry_all = neumann # Default zero value

[rho]

scale=1.e-3

function = exp(-((x - 0.4) / 0.25)^2) * exp(-((y/(2*pi) - 0.5)/0.6)^2) * sin(z)

[Vpar]

bndry_pf = dirichlet
bndry_sol = dirichlet

[Te]


[Ti]


[u] # Vorticity

#bndry_xin = zerolaplace
#bndry_xout = zerolaplace

[Apar]
#bndry_xin = constlaplace
#bndry_xout = zerolaplace

[Jpar]

[phi]
# X boundaries set by flags
bndry_xin = none
bndry_xout = none

