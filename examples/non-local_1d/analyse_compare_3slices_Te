#!/usr/bin/env python
# -*- coding: utf-8 -*-

#
# Runs the conduction example, produces some output
#

from __future__ import division
from builtins import str
from builtins import range
from past.utils import old_div
nproc = 1  # Number of processors to use

from boutdata.collect import collect
import numpy as np
from sys import argv
from matplotlib import pyplot, rc

rc('text', usetex=True)
#rc('font',**{'family':'serif','serif':['Computer Modern']})
rc('font',**{'family':'serif','serif':['Computer Modern'],'size':20})

data_path1 = str(argv[1])
slice_index1 = int(argv[2])
data_path2 = str(argv[3])
slice_index2 = int(argv[4])
data_path3 = str(argv[5])
slice_index3 = int(argv[6])

# Collect the data
T1 = collect("T_electron", path=data_path1, xind=2, info=True, yguards=True)
T2 = collect("T_electron", path=data_path2, xind=2, info=True, yguards=True)
T3 = collect("T_electron", path=data_path3, xind=2, info=True, yguards=True)

# T has dimensions [Time, X, Y, Z]
#for index, item in enumerate(T[slice_index,0,:,0]):
#	print index, item
# Make contour plot
#plotdata(T[slice_index,0,:,0],title="Electron Temperature Profile at t="+str(argv[1]),ytitle="T/eV")

positions=[]
totalgridpoints = len(T1[0,0,2:-3,0])
for i in range(totalgridpoints):
  positions.append(80./float(totalgridpoints)*(float(i)+0.5-old_div(float(totalgridpoints),2.)))

pyplot.figure(facecolor='w')
#pyplot.figure(dpi=800, facecolor='w')
pyplot.plot(positions,T1[slice_index1,0,2:-3,0],'b-',positions,T2[slice_index2,0,2:-3,0],'r--',positions,T3[slice_index3,0,2:-3,0],'g:')
#pyplot.plot(positions,T1[slice_index1,0,2:-3,0],'k',positions,T2[slice_index2,0,2:-3,0],'b',positions,T3[slice_index3,0,2:-3,0],'r')
pyplot.xlabel("Position / m")
pyplot.ylabel("Electron Temperature / eV")
pyplot.tight_layout(pad=0.1)

pyplot.savefig('fig.pdf')
pyplot.savefig('fig.eps')

pyplot.show()
