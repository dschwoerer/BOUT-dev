#!/usr/bin/env python

#NOTE: THIS FILE WAS NOT COMPLETED WHEN PORTING TO PYTHON 3

from __future__ import print_function
from builtins import str
from builtins import range
from boututils.run_wrapper import shell, launch
from boutdata.plotdata import plotdata
from boutdata.collect import collect
import numpy as np
from sys import argv
from math import log10

maxval = -1
end_index = -1
data_path = "data"

if len(argv)==1:
  print("len(argv)==1...was something supposed to happen???")
elif len(argv)==2:
  try:
    end_index = int(argv[1])
  except ValueError:
    data_path = str(argv[1])
elif len(argv)==3:
  try:
    end_index = int(argv[1])
    data_path = str(argv[2])
  except ValueError:
    data_path = str(argv[1])
    maxval = float(argv[2])
elif len(argv)==4:
  end_index = int(argv[1])
  data_path = str(argv[2])
  maxval = float(argv[3])
else:
  raise RuntimeError("Arguments: [end_index][data_path] or [data_path]")

# Collect the data
r = collect("local_non-local_ratio", path="data", xind=2, info=True, yguards=True)

if end_index<0:
  end_index = len(r[:,0,0,0])

# Te has dimensions [Time, X, Y, Z]
# Make contour plot
if maxval>0:
  for i in range(len(r[:end_index,0,0,0])):
    for j in range(2,len(r[0,0,:,0])-2):
      #print(r[i,0,j,0])
      #print(r[i,0,j,0])
      if r[i,0,j,0]>0:
	    r[i,0,j,0]=min((r[i,0,j,0]),maxval)
      else:
	    r[i,0,j,0]=0

plotdata(r[:end_index,0,2:-2,0])
