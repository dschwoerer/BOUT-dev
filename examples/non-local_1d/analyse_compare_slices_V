#!/usr/bin/env python
# -*- coding: utf-8 -*-

#
# Runs the conduction example, produces some output
#

from __future__ import division
from builtins import str
from builtins import range
from past.utils import old_div
nproc = 1  # Number of processors to use

from boutdata.collect import collect
import numpy as np
from sys import argv
from matplotlib import pyplot

slice_index = int(argv[1])
data_path1 = str(argv[2])
data_path2 = str(argv[3])

# Collect the data
V1 = collect("Vpar_ion", path=data_path1, xind=2, info=True, yguards=True)
V2 = collect("Vpar_ion", path=data_path2, xind=2, info=True, yguards=True)

# T has dimensions [Time, X, Y, Z]
#for index, item in enumerate(T[slice_index,0,:,0]):
#	print index, item
# Make contour plot
#plotdata(T[slice_index,0,:,0],title="Electron Temperature Profile at t="+str(argv[1]),ytitle="T/eV")

positions=[]
totalgridpoints = len(V1[0,0,2:-3,0])
for i in range(totalgridpoints):
  positions.append(80./float(totalgridpoints)*(float(i)+0.5-old_div(float(totalgridpoints),2.)))

pyplot.figure(dpi=80, facecolor='w')
pyplot.plot(positions,V1[slice_index,0,2:-3,0],'b',positions,V2[slice_index,0,2:-3,0],'r-')
pyplot.xlabel("Position / m")
pyplot.ylabel("Electron Temperature / eV")
pyplot.show()
