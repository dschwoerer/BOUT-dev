#!/usr/bin/env python
# -*- coding: utf-8 -*-

#
# Runs the conduction example, produces some output
#

from __future__ import division
from builtins import str
from builtins import range
from past.utils import old_div
nproc = 1  # Number of processors to use

from boutdata.collect import collect
import numpy as np
from sys import argv
from matplotlib import pyplot, rc

rc('text', usetex=True)
rc('font',**{'family':'serif','serif':['Computer Modern']})


#slice_index = int(argv[1])
try:
  data_path = str(argv[1])
except:
  data_path = "data"

# Collect the data
T = collect("T_electron", path=data_path, xind=2, info=True, yguards=True)

# T has dimensions [Time, X, Y, Z]
#for index, item in enumerate(T[slice_index,0,:,0]):
#	print index, item
# Make contour plot
#plotdata(T[slice_index,0,:,0],title="Electron Temperature Profile at t="+str(argv[1]),ytitle="T/eV")

slicetimes = [0,50,100,150,200,250,300]

positions=[]
totalgridpoints = len(T[0,0,2:-3,0])
for i in range(totalgridpoints):
  positions.append(80./float(totalgridpoints)*(float(i)+0.5-old_div(float(totalgridpoints),2.)))

#pyplot.figure(dpi=80, facecolor='w')
pyplot.figure(dpi=800, facecolor='w')

for t in slicetimes:
  line=pyplot.plot(positions,T[t,0,2:-3,0])
  #line[0].set_label(r"t="+str(t)+r"$\mu$s")
  if t==0:
    height = -8
  elif t==50:
    height = 12
  elif t==100:
    height = 0
  elif t==250:
    height = 9
  elif t==300:
    height = 9
  else:
    height = 8
#  if t==0:
#    height = -10
#  elif t==250:
#    height = 6
#  elif t==300:
#    height = 11
#  else:
#    height = 5
  pyplot.annotate(r"t="+str(t)+r"$\mu$s",xy=(positions[-1],T[t,0,-4,0]),xycoords='data',xytext=(-45,height),textcoords='offset points',color=pyplot.getp(line[0],'color'))

pyplot.xlabel("Position / m")
pyplot.ylabel("Electron Temperature / eV")
#pyplot.legend()
pyplot.show()
